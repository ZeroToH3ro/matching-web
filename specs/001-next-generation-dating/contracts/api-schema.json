{
  "openapi": "3.0.3",
  "info": {
    "title": "Next-Generation Dating Platform API",
    "description": "API for Web3-enabled dating platform with privacy-preserving features",
    "version": "1.0.0",
    "contact": {
      "name": "Match-Me Platform",
      "email": "dev@match-me.app"
    }
  },
  "servers": [
    {
      "url": "https://api.match-me.app/v1",
      "description": "Production API"
    },
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development API"
    }
  ],
  "paths": {
    "/auth/zklogin": {
      "post": {
        "summary": "Authenticate user via zkLogin",
        "description": "Authenticate user using OAuth + ZK proofs for seamless Web3 onboarding",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZkLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/profiles": {
      "post": {
        "summary": "Create user profile",
        "description": "Create new user profile as dynamic NFT",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve current user's profile",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update user profile",
        "description": "Update user profile (triggers dynamic NFT evolution)",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          }
        }
      }
    },
    "/profiles/{userId}": {
      "get": {
        "summary": "Get public profile",
        "description": "Get another user's public profile information",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Public profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicProfile"
                }
              }
            }
          }
        }
      }
    },
    "/matching/discover": {
      "get": {
        "summary": "Discover potential matches",
        "description": "Get potential matches using privacy-preserving algorithms",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 50
            }
          },
          {
            "name": "zkProof",
            "in": "query",
            "description": "ZK proof of matching preferences",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Potential matches found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "matches": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PotentialMatch"
                      }
                    },
                    "hasMore": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matching/surprise": {
      "post": {
        "summary": "Generate surprise match",
        "description": "Use native Sui randomness to generate surprise match",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Surprise match generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurpriseMatch"
                }
              }
            }
          }
        }
      }
    },
    "/interactions/like": {
      "post": {
        "summary": "Like a user",
        "description": "Express interest in another user",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LikeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Like recorded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LikeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/interactions/gift": {
      "post": {
        "summary": "Send digital gift",
        "description": "Send digital gift using SuiNS for easy addressing",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gift sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "summary": "Get conversations",
        "description": "Retrieve user's conversations",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Conversations retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Send message",
        "description": "Send encrypted message to matched user",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{conversationId}": {
      "get": {
        "summary": "Get conversation messages",
        "description": "Get messages for specific conversation",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/media/upload": {
      "post": {
        "summary": "Upload media to Walrus",
        "description": "Upload photo/video to decentralized storage",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["PUBLIC", "MATCHES", "PRIVATE"]
                  },
                  "timeCapsule": {
                    "$ref": "#/components/schemas/TimeCapsuleConfig"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Media uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaContent"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "summary": "Get subscription status",
        "description": "Get current subscription information",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Subscription information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create subscription",
        "description": "Subscribe to premium tier using Seal Protocol",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      }
    },
    "/verification/request": {
      "post": {
        "summary": "Request identity verification",
        "description": "Start identity verification process",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Verification request accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ZkLoginRequest": {
        "type": "object",
        "required": ["provider", "idToken", "zkProof"],
        "properties": {
          "provider": {
            "type": "string",
            "enum": ["google", "facebook", "apple", "twitter"]
          },
          "idToken": {
            "type": "string",
            "description": "OAuth ID token"
          },
          "zkProof": {
            "type": "string",
            "description": "Zero knowledge proof for privacy"
          },
          "nonce": {
            "type": "string"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT access token"
          },
          "suiAddress": {
            "type": "string",
            "description": "User's Sui wallet address"
          },
          "profileComplete": {
            "type": "boolean"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "CreateProfileRequest": {
        "type": "object",
        "required": ["displayName", "age", "interests"],
        "properties": {
          "displayName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "age": {
            "type": "integer",
            "minimum": 18,
            "maximum": 100
          },
          "bio": {
            "type": "string",
            "maxLength": 500
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 3,
            "maxItems": 20
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {"type": "number"},
              "longitude": {"type": "number"},
              "city": {"type": "string"}
            }
          },
          "privacySettings": {
            "$ref": "#/components/schemas/PrivacySettings"
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "displayName": {"type": "string"},
          "bio": {"type": "string"},
          "interests": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "suiAddress": {"type": "string"},
          "displayName": {"type": "string"},
          "age": {"type": "integer"},
          "bio": {"type": "string"},
          "interests": {
            "type": "array",
            "items": {"type": "string"}
          },
          "reputation": {"type": "number"},
          "verificationLevel": {
            "type": "string",
            "enum": ["UNVERIFIED", "EMAIL_VERIFIED", "ID_VERIFIED", "FULL_VERIFIED"]
          },
          "memberSince": {"type": "string", "format": "date-time"},
          "lastActive": {"type": "string", "format": "date-time"},
          "mediaCount": {"type": "integer"},
          "profileVersion": {"type": "integer"}
        }
      },
      "PublicProfile": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "displayName": {"type": "string"},
          "age": {"type": "integer"},
          "bio": {"type": "string"},
          "interests": {
            "type": "array",
            "items": {"type": "string"}
          },
          "verificationLevel": {"type": "string"},
          "mediaPreview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaPreview"
            }
          }
        }
      },
      "PotentialMatch": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/PublicProfile"
          },
          "compatibilityScore": {"type": "number"},
          "sharedInterests": {
            "type": "array",
            "items": {"type": "string"}
          },
          "distance": {"type": "number"},
          "zkProofValid": {"type": "boolean"}
        }
      },
      "SurpriseMatch": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/PublicProfile"
          },
          "randomnessProof": {"type": "string"},
          "generatedAt": {"type": "string", "format": "date-time"},
          "expiresAt": {"type": "string", "format": "date-time"}
        }
      },
      "LikeRequest": {
        "type": "object",
        "required": ["targetUserId"],
        "properties": {
          "targetUserId": {"type": "string"},
          "isSuper": {"type": "boolean", "default": false},
          "message": {"type": "string", "maxLength": 200}
        }
      },
      "LikeResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "isMatch": {"type": "boolean"},
          "transactionDigest": {"type": "string"},
          "matchId": {"type": "string"}
        }
      },
      "GiftRequest": {
        "type": "object",
        "required": ["recipient", "giftType"],
        "properties": {
          "recipient": {
            "type": "string",
            "description": "SuiNS name or address"
          },
          "giftType": {
            "type": "string",
            "enum": ["VIRTUAL_FLOWER", "COFFEE", "DONATION", "CUSTOM_TOKEN"]
          },
          "amount": {"type": "number"},
          "message": {"type": "string"}
        }
      },
      "GiftResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "transactionDigest": {"type": "string"},
          "recipientNotified": {"type": "boolean"}
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "participants": {
            "type": "array",
            "items": {"type": "string"}
          },
          "lastMessage": {
            "$ref": "#/components/schemas/Message"
          },
          "unreadCount": {"type": "integer"},
          "createdAt": {"type": "string", "format": "date-time"}
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": ["recipientId", "content"],
        "properties": {
          "recipientId": {"type": "string"},
          "content": {"type": "string"},
          "messageType": {
            "type": "string",
            "enum": ["TEXT", "IMAGE", "VOICE", "TIME_CAPSULE"],
            "default": "TEXT"
          },
          "mediaId": {"type": "string"},
          "timeCapsule": {
            "$ref": "#/components/schemas/TimeCapsuleConfig"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "from": {"type": "string"},
          "to": {"type": "string"},
          "content": {"type": "string"},
          "messageType": {"type": "string"},
          "timestamp": {"type": "string", "format": "date-time"},
          "readStatus": {
            "type": "string",
            "enum": ["UNREAD", "READ", "PRIVACY_HIDDEN"]
          },
          "transactionDigest": {"type": "string"}
        }
      },
      "MediaContent": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "walrusBlobId": {"type": "string"},
          "contentType": {
            "type": "string",
            "enum": ["IMAGE", "VIDEO", "AUDIO"]
          },
          "visibilityLevel": {
            "type": "string",
            "enum": ["PUBLIC", "MATCHES", "PRIVATE"]
          },
          "moderationStatus": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"]
          },
          "uploadedAt": {"type": "string", "format": "date-time"},
          "expiresAt": {"type": "string", "format": "date-time"}
        }
      },
      "MediaPreview": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "thumbnailUrl": {"type": "string"},
          "contentType": {"type": "string"},
          "blurred": {"type": "boolean"}
        }
      },
      "TimeCapsuleConfig": {
        "type": "object",
        "properties": {
          "revealAt": {"type": "string", "format": "date-time"},
          "conditions": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "tier": {
            "type": "string",
            "enum": ["FREE", "BASIC", "PREMIUM", "PLATINUM"]
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "features": {
            "type": "array",
            "items": {"type": "string"}
          },
          "endDate": {"type": "string", "format": "date-time"},
          "autoRenewal": {"type": "boolean"},
          "sealPolicyId": {"type": "string"}
        }
      },
      "SubscribeRequest": {
        "type": "object",
        "required": ["tier", "billingCycle"],
        "properties": {
          "tier": {
            "type": "string",
            "enum": ["BASIC", "PREMIUM", "PLATINUM"]
          },
          "billingCycle": {
            "type": "string",
            "enum": ["MONTHLY", "YEARLY"]
          },
          "promoCode": {"type": "string"}
        }
      },
      "VerificationRequest": {
        "type": "object",
        "required": ["verificationType"],
        "properties": {
          "verificationType": {
            "type": "string",
            "enum": ["EMAIL", "PHONE", "ID", "BIOMETRIC"]
          },
          "data": {"type": "object"}
        }
      },
      "VerificationResponse": {
        "type": "object",
        "properties": {
          "verificationId": {"type": "string"},
          "status": {"type": "string"},
          "nextSteps": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "PrivacySettings": {
        "type": "object",
        "properties": {
          "profileVisibility": {
            "type": "string",
            "enum": ["PUBLIC", "VERIFIED_ONLY", "MATCHES_ONLY"]
          },
          "locationSharing": {"type": "boolean"},
          "readReceipts": {"type": "boolean"},
          "onlineStatus": {"type": "boolean"},
          "zkPrivacyLevel": {
            "type": "string",
            "enum": ["MINIMAL", "BALANCED", "MAXIMUM"]
          }
        }
      }
    }
  }
}